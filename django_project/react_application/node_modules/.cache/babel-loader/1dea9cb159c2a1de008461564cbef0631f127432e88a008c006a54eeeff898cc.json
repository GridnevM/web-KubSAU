{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\maksi\\\\OneDrive\\\\\\u0420\\u0430\\u0431\\u043E\\u0447\\u0438\\u0439 \\u0441\\u0442\\u043E\\u043B\\\\web-application\\\\src\\\\components\\\\Footer\\\\Footer.js\",\n  _s = $RefreshSig$();\nimport \"./style.css\";\nimport React, { useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Footer = () => {\n  _s();\n  const [isVisible, setIsVisible] = React.useState(false);\n\n  // Функция, которая будет вызываться при изменении видимости элемента\n  function onIntersect(entries) {\n    entries.forEach(entry => {\n      if (entry.isIntersecting) {\n        setIsVisible(true);\n      }\n    });\n  }\n\n  // Создаем новый экземпляр IntersectionObserver и передаем ему функцию обратного вызова\n  const observer = new IntersectionObserver(onIntersect);\n\n  // Находим элемент подвала и добавляем наблюдение за ним\n  const footerElement = document.querySelector('.Footer');\n  if (footerElement) {\n    observer.observe(footerElement);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"Footer\",\n    children: /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"podval\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 24,\n    columnNumber: 9\n  }, this);\n};\n_s(Footer, \"QjDZesRvLCmcrZLxgN677nXnVLA=\");\n_c = Footer;\nexport default Footer;\nvar _c;\n$RefreshReg$(_c, \"Footer\");","map":{"version":3,"names":["React","useEffect","jsxDEV","_jsxDEV","Footer","_s","isVisible","setIsVisible","useState","onIntersect","entries","forEach","entry","isIntersecting","observer","IntersectionObserver","footerElement","document","querySelector","observe","className","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/maksi/OneDrive/Рабочий стол/web-application/src/components/Footer/Footer.js"],"sourcesContent":["import \"./style.css\"\r\nimport React, { useEffect } from 'react';\r\nconst Footer = () => {\r\n    const [isVisible, setIsVisible] = React.useState(false);\r\n\r\n  // Функция, которая будет вызываться при изменении видимости элемента\r\n  function onIntersect(entries) {\r\n    entries.forEach((entry) => {\r\n      if (entry.isIntersecting) {\r\n        setIsVisible(true);\r\n      }\r\n    });\r\n  }\r\n\r\n  // Создаем новый экземпляр IntersectionObserver и передаем ему функцию обратного вызова\r\n  const observer = new IntersectionObserver(onIntersect);\r\n\r\n  // Находим элемент подвала и добавляем наблюдение за ним\r\n  const footerElement = document.querySelector('.Footer');\r\n  if (footerElement) {\r\n    observer.observe(footerElement);\r\n  }\r\n    return ( \r\n        <div className=\"Footer\">\r\n            <p>podval</p>\r\n        </div>\r\n     );\r\n}\r\n \r\nexport default Footer;"],"mappings":";;AAAA,OAAO,aAAa;AACpB,OAAOA,KAAK,IAAIC,SAAS,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AACzC,MAAMC,MAAM,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACjB,MAAM,CAACC,SAAS,EAAEC,YAAY,CAAC,GAAGP,KAAK,CAACQ,QAAQ,CAAC,KAAK,CAAC;;EAEzD;EACA,SAASC,WAAWA,CAACC,OAAO,EAAE;IAC5BA,OAAO,CAACC,OAAO,CAAEC,KAAK,IAAK;MACzB,IAAIA,KAAK,CAACC,cAAc,EAAE;QACxBN,YAAY,CAAC,IAAI,CAAC;MACpB;IACF,CAAC,CAAC;EACJ;;EAEA;EACA,MAAMO,QAAQ,GAAG,IAAIC,oBAAoB,CAACN,WAAW,CAAC;;EAEtD;EACA,MAAMO,aAAa,GAAGC,QAAQ,CAACC,aAAa,CAAC,SAAS,CAAC;EACvD,IAAIF,aAAa,EAAE;IACjBF,QAAQ,CAACK,OAAO,CAACH,aAAa,CAAC;EACjC;EACE,oBACIb,OAAA;IAAKiB,SAAS,EAAC,QAAQ;IAAAC,QAAA,eACnBlB,OAAA;MAAAkB,QAAA,EAAG;IAAM;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAG;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACZ,CAAC;AAEd,CAAC;AAAApB,EAAA,CAzBKD,MAAM;AAAAsB,EAAA,GAANtB,MAAM;AA2BZ,eAAeA,MAAM;AAAC,IAAAsB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}